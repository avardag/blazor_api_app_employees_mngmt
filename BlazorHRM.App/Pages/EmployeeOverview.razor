@page "/employeeoverview"
@using BlazorHRM.Shared.Domain
@using BlazorHRM.App.Services
@* @inject HttpClient HttpClient //use httpFactory instead *@
@* @using System.Net.Http.Json //use httpFactory instead *@
@inject IEmployeeDataService EmployeeDataService

<PageTitle>@Title</PageTitle>
<h2>@Title</h2>

@if (Employees is null)
{
    <p>Loading...</p>
}
else
{
    <QuickViewPopup Employee="_selectedEmployee" />
    <div class="row">
        @foreach (var empl in Employees)
        {
            <div class="col-12 col-sm-12 col-md-6 col-lg-4 col-xl-3">
                <ErrorBoundary>
                    <ChildContent>
                        <EmployeeCard Employee="empl"  EmployeeQuickViewClicked="HandleEmployeeQuickViewClicked" />
                    </ChildContent>
                    <ErrorContent>
                        <p class="errorUI text-center">Invalid Employee</p>
                    </ErrorContent>
                </ErrorBoundary>
            </div>
        }
    </div>
}

@code {
    public string Title = "Employee Overview";
    public List<Employee>? Employees { get; set; } = default!;
    private Employee? _selectedEmployee;
    // [Inject]
    // public IEmployeeDataService? EmployeeDataService { get; set; }

    //use httpFactory instead
    // protected async override Task OnInitializedAsync() 
    // {
    //     Employees = await HttpClient.GetFromJsonAsync<List<Employee>>("https://localhost:7229/api/employee");
    // }
    protected override async Task OnInitializedAsync()
    {
        Employees = (await EmployeeDataService.GetAllEmployees(true)).ToList();
    }

    public void HandleEmployeeQuickViewClicked(Employee selectedEmployee)
    {
        _selectedEmployee = selectedEmployee;
    }
}